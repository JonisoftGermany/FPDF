<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Exemple minimal</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="../fpdf.css">
</HEAD>
<BODY>
<H2>Exemple minimal</H2>
Voici pour commencer l'exemple classique :
<BR>
<BR>
<TABLE WIDTH="100%" BGCOLOR="#E0E0E0"><TR><TD>
<TT>
&lt;?php<BR>
require('fpdf.php');<BR>
<BR>
$pdf=new FPDF();<BR>
$pdf-&gt;Open();<BR>
$pdf-&gt;AddPage();<BR>
$pdf-&gt;SetFont('Arial','B',16);<BR>
$pdf-&gt;Cell(40,10,'Hello World !');<BR>
$pdf-&gt;Output();<BR>
?&gt;
</TT>
</TD></TR></TABLE><BR>
<SCRIPT>
<!--
if(document.location.href.indexOf('http:')==0)
{
document.write("<A HREF='tuto1.php'>[Démo]</A><BR><BR>");
}
//-->
</SCRIPT>
Après avoir inclus la librairie, un object FPDF est créé.
Le constructeur <A HREF='../doc/fpdf.htm'>FPDF()</A> est utilisé ici avec les valeurs par défaut. Les pages sont en
portrait et l'unité de mesure est le millimètre. On aurait pu l'indiquer explicitement par :
<BR>
<BR>
<TABLE WIDTH="100%" BGCOLOR="#E0E0E0"><TR><TD>
<TT>
$pdf=new FPDF('P','mm');
</TT>
</TD></TR></TABLE><BR>
Il est possible de passer en paysage (L) et d'utiliser d'autres unités de mesure (pt, cm, in).
<BR>
<BR>
<A HREF='../doc/open.htm'>Open()</A> commence le document PDF. Il n'y a pour l'instant encore aucune page, c'est
pourquoi il faut en ajouter une avec <A HREF='../doc/addpage.htm'>AddPage()</A>. L'origine est en haut à gauche et la
position courante est placée par défaut à 1 cm des bords; on peut changer ces marges par
<A HREF='../doc/setmargins.htm'>SetMargins()</A>.
<BR>
<BR>
Avant d'imprimer du texte, il est impératif de définir la police avec <A HREF='../doc/setfont.htm'>SetFont()</A>, sinon
le document serait invalide. On choisit de l'Arial gras en taille 16 :
<BR>
<BR>
<TABLE WIDTH="100%" BGCOLOR="#E0E0E0"><TR><TD>
<TT>
$pdf-&gt;SetFont('Arial','B',16);
</TT>
</TD></TR></TABLE><BR>
On aurait pu spécifier de l'italique avec I ou une police sans style avec une chaîne vide.
A noter que la taille de la police est ici donnée en points, pas en millimètres (ou autre
unité choisie); c'est la seule exception. Les autres polices disponibles sont Times, Courier,
Symbol et ZapfDingbats.
<BR>
<BR>
On imprime ensuite une cellule grâce à <A HREF='../doc/cell.htm'>Cell()</A>. Une cellule est une zone rectangulaire,
éventuellement encadrée, qui contient du texte. Elle est imprimée à la position courante.
On spécifie ses dimensions, le texte (centré ou aligné), si elle doit être entourée, et si
la position courante doit être déplacée à droite ou doit au contraire aller à la ligne
suivante. On aurait encadré le texte comme ceci :
<BR>
<BR>
<TABLE WIDTH="100%" BGCOLOR="#E0E0E0"><TR><TD>
<TT>
$pdf-&gt;Cell(40,10,'Hello World !',1);
</TT>
</TD></TR></TABLE><BR>
Si on veut ajouter une nouvelle cellule à droite avec du texte centré et retourner à la ligne,
on fait :
<BR>
<BR>
<TABLE WIDTH="100%" BGCOLOR="#E0E0E0"><TR><TD>
<TT>
$pdf-&gt;Cell(60,10,'Powered by FPDF.',0,1,'C');
</TT>
</TD></TR></TABLE><BR>
Remarque : le retour à la ligne peut également s'effectuer grâce à la méthode <A HREF='../doc/ln.htm'>Ln()</A>. Cette
dernière permet de préciser en plus la hauteur du saut de ligne.
<BR>
<BR>
Enfin, le document est terminé et envoyé au navigateur grâce à
<A HREF='../doc/output.htm'>Output()</A>. On aurait pu le sauvegarder dans un fichier en passant le
nom souhaité.
</BODY>
</HTML>
